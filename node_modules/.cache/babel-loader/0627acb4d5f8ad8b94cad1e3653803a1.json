{"ast":null,"code":"var _jsxFileName = \"/Users/stephenwayar/Desktop/ME/CODE/Repos/CountrySearch/src/components/searchBar/searchBar.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Country from \"../country/country.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = () => {\n  _s();\n\n  const [input, setInput] = useState();\n  const [allCountries, setAllCountries] = useState();\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  useEffect(() => {\n    axios.get(\"https://restcountries.com/v3.1/all\").then(res => {\n      console.log(\"Promise Passed!\");\n      const data = res.data.map(datum => datum.name.common);\n      setAllCountries(data);\n    });\n  }, []);\n  const filteredResult = allCountries.filter(country => country.toLowerCase().includes(input.toLowerCase())).map((filtered, index) => /*#__PURE__*/_jsxDEV(Country, {\n    name: filtered,\n    officialName: filtered,\n    capital: filtered,\n    independent: filtered,\n    subregion: filtered,\n    region: filtered,\n    population: filtered,\n    flags: filtered,\n    continents: filtered\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), filteredResult]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchBar, \"WwdLXoTQabHZP/CAFjYrBDmadyw=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/Users/stephenwayar/Desktop/ME/CODE/Repos/CountrySearch/src/components/searchBar/searchBar.component.jsx"],"names":["React","useEffect","useState","axios","Country","SearchBar","input","setInput","allCountries","setAllCountries","handleChange","e","target","value","get","then","res","console","log","data","map","datum","name","common","filteredResult","filter","country","toLowerCase","includes","filtered","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,8BAApB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,EAAlC;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,EAAhD;;AAEA,QAAMQ,YAAY,GAAGC,CAAC,IAAI;AACxBJ,IAAAA,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,GAFD;;AAIAZ,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACFW,GADH,CACO,oCADP,EAEGC,IAFH,CAEQC,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,YAAMC,IAAI,GAAGH,GAAG,CAACG,IAAJ,CAASC,GAAT,CAAaC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,MAAjC,CAAb;AACAd,MAAAA,eAAe,CAACU,IAAD,CAAf;AACD,KANH;AAOD,GARQ,EAQN,EARM,CAAT;AAWA,QAAMK,cAAc,GAAGhB,YAAY,CAACiB,MAAb,CAAoBC,OAAO,IAAIA,OAAO,CAACC,WAAR,GAAsBC,QAAtB,CAA+BtB,KAAK,CAACqB,WAAN,EAA/B,CAA/B,EAAoFP,GAApF,CAAwF,CAACS,QAAD,EAAWC,KAAX,kBAC7G,QAAC,OAAD;AAEE,IAAA,IAAI,EAAED,QAFR;AAGE,IAAA,YAAY,EAAEA,QAHhB;AAIE,IAAA,OAAO,EAAEA,QAJX;AAKE,IAAA,WAAW,EAAEA,QALf;AAME,IAAA,SAAS,EAAEA,QANb;AAOE,IAAA,MAAM,EAAEA,QAPV;AAQE,IAAA,UAAU,EAAEA,QARd;AASE,IAAA,KAAK,EAAEA,QATT;AAUE,IAAA,UAAU,EAAEA;AAVd,KACOC,KADP;AAAA;AAAA;AAAA;AAAA,UADqB,CAAvB;AAgBA,sBACE;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAExB,KAFT;AAGE,MAAA,QAAQ,EAAEI;AAHZ;AAAA;AAAA;AAAA;AAAA,YADF,EAMGc,cANH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA9CD;;GAAMnB,S;;KAAAA,S;AAgDN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\"\nimport Country from \"../country/country.component\";\n\nconst SearchBar = () => {\n\n  const [input, setInput] = useState()\n  const [allCountries, setAllCountries] = useState()\n\n  const handleChange = e => {\n    setInput(e.target.value)\n  }\n\n  useEffect(() => {\n    axios\n      .get(\"https://restcountries.com/v3.1/all\")\n      .then(res => {\n        console.log(\"Promise Passed!\");\n        const data = res.data.map(datum => datum.name.common)\n        setAllCountries(data)\n      })\n  }, [])\n\n\n  const filteredResult = allCountries.filter(country => country.toLowerCase().includes(input.toLowerCase())).map((filtered, index) => (\n    <Country \n      key={index} \n      name={filtered}\n      officialName={filtered}\n      capital={filtered}\n      independent={filtered}\n      subregion={filtered}\n      region={filtered}\n      population={filtered}\n      flags={filtered}\n      continents={filtered}\n    />\n  ))\n\n\n  return(\n    <div>\n      <input\n        type=\"text\"\n        value={input}\n        onChange={handleChange}\n      />\n      {filteredResult}\n    </div>\n  )\n}\n\nexport default SearchBar"]},"metadata":{},"sourceType":"module"}